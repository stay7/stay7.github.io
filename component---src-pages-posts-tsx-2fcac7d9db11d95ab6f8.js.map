{"version":3,"file":"component---src-pages-posts-tsx-2fcac7d9db11d95ab6f8.js","mappings":"mIAWA,IAXc,CACZA,MAAO,UACPC,MAAO,UACPC,OAAQ,UACRC,KAAM,UACNC,KAAM,UACNC,SAAU,UACVC,KAAM,UACNC,MAAO,Y,oGCNYC,EAOnB,SAAYC,GACV,IAAQC,EAAgBD,EAAhBC,YACRC,OAAOC,OAAOC,KAAMH,I,wCCNlBI,GAAaC,EAAAA,EAAAA,SAAOC,EAAAA,MAAV,uEAAGD,CAAH,+CAELE,EAAAA,EAAAA,OAYX,EAJmB,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,GAAOC,ECfd,SAAuCC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAad,OAAOe,KAAKN,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWE,OAAQJ,IACjCD,EAAMG,EAAWF,GACbF,EAASO,QAAQN,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDGuC,MAC9C,OAAO,gBAACV,EAAD,eAAYI,GAAIA,GAAQC,KEV3BU,EAAYd,EAAAA,QAAAA,IAAAA,WAAH,8DAAGA,CAAH,2GAMOE,EAAAA,EAAAA,OAGhBa,EAAYf,EAAAA,QAAAA,IAAAA,WAAH,8DAAGA,CAAH,6EAMX,SAACI,GAAD,OACAA,EAAMF,QACNc,EAAAA,EAAAA,KADA,0BAEsBZ,EAAMF,UAG1Be,EAAajB,EAAAA,QAAAA,IAAAA,WAAH,+DAAGA,CAAH,kFAMVkB,EAAQlB,EAAAA,QAAAA,GAAAA,WAAH,0DAAGA,CAAH,sDAKLmB,EAAcnB,EAAAA,QAAAA,IAAAA,WAAH,gEAAGA,CAAH,qBAGXoB,EAAWpB,EAAAA,QAAAA,KAAAA,WAAH,6DAAGA,CAAH,8BAEHE,EAAAA,EAAAA,QAELmB,EAAWrB,EAAAA,QAAAA,KAAAA,WAAH,6DAAGA,CAAH,8BACHE,EAAAA,EAAAA,QAGLoB,EAAgBtB,EAAAA,QAAAA,IAAAA,WAAH,kEAAGA,CAAH,MAEbuB,EAAWvB,EAAAA,QAAAA,IAAAA,WAAH,6DAAGA,CAAH,uCAGHE,EAAAA,EAAAA,MAsCX,EA/BiB,SAAC,GAAqB,IAAnBsB,EAAkB,EAAlBA,KACVC,EAAgCD,EAAhCC,MAAOC,EAAyBF,EAAzBE,KAAMC,EAAmBH,EAAnBG,KAAMC,EAAaJ,EAAbI,SAC3B,GAAwBC,EAAAA,EAAAA,WAAS,GAA1BC,EAAP,KAAaC,EAAb,KAEA,OACE,gBAACjB,EAAD,CACEkB,aAAc,WACZD,GAAQ,IAEVE,aAAc,WACZF,GAAQ,KAGV,gBAAC,EAAD,CAAM5B,GAAIuB,GACR,gBAACX,EAAD,CAAWb,MAAO4B,EAAO5B,EAAAA,EAAAA,KAAaA,EAAAA,EAAAA,OACpC,gBAACe,EAAD,KACE,gBAACC,EAAD,KAAQO,GACR,gBAACN,EAAD,KACGS,GAAY,gBAACR,EAAD,KAAWQ,IAE1B,gBAACN,EAAD,KACE,gBAACD,EAAD,KAAWM,GACX,gBAACJ,EAAD,KAAWO,GAAQ,gDCxCjC,EApCa,SAAC,GAAc,IAKpBI,EALmB,EAAXC,KAEZC,kBAAqBC,MAGSC,KAAI,YAAe,IAAZ5C,EAAW,EAAXA,KACrC,OAAO,IAAID,EAAUC,MAGvB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAK+B,MAAM,SACVS,EAAMI,KAAI,SAACd,GACV,OAAO,gBAAC,EAAD,CAAUA,KAAMA","sources":["webpack://gatsby-starter-default/./src/constants/constants.ts","webpack://gatsby-starter-default/./src/model/PostModel.ts","webpack://gatsby-starter-default/./src/components/link.tsx","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://gatsby-starter-default/./src/components/postItem.tsx","webpack://gatsby-starter-default/./src/pages/posts.tsx"],"sourcesContent":["const color = {\n  white: \"#ffffff\",\n  black: \"#292931\",\n  gray75: \"#757575\",\n  gray: \"#36313d\",\n  blue: \"#1167b1\",\n  burgundy: \"#900020\",\n  navy: \"#274472\",\n  green: \"#59981A\",\n};\n\nexport default color;\n","import { INode, IPost } from \"../constants/types\";\n\nexport default class PostModel implements IPost {\n  title;\n  path;\n  date;\n  subtitle?;\n  primate?;\n\n  constructor(node: any) {\n    const { frontmatter } = node;\n    Object.assign(this, frontmatter);\n  }\n}\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport color from \"../constants/constants\";\n\nconst GatsbyLink = styled(Link)`\n  width: 100%;\n  color: ${color.black};\n  text-decoration: none;\n`;\n\ninterface Props {\n  to: string;\n}\n\nconst GastbyLink = ({ to, ...props }: Props) => {\n  return <GatsbyLink to={to} {...props}></GatsbyLink>;\n};\n\nexport default GastbyLink;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { useState, CSSProperties } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport color from \"../constants/constants\";\nimport PostModel from \"../model/PostModel\";\nimport Link from \"./link\";\n\nconst Container = styled.div`\n  display: flex;\n  height: 170px;\n  border: 1px solid;\n  padding: 10px;\n  margin: 10px 0px 10px 0px;\n  background-color: ${color.white};\n`;\n\nconst BorderBox = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: row;\n  padding: 10px;\n  ${(props) =>\n    props.color &&\n    css`\n      border: 1px solid ${props.color};\n    `}\n`;\nconst ContentBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: space-between;\n`;\nconst Title = styled.h2`\n  padding: 0;\n  margin-bottom: 0;\n  border-bottom-width: 0;\n`;\nconst SubtitleBox = styled.div`\n  flex-grow: auto;\n`;\nconst Subtitle = styled.span`\n  font-size: 16px;\n  color: ${color.gray75};\n`;\nconst DateText = styled.span`\n  color: ${color.gray75};\n  font-size: 13px;\n`;\nconst MetaContainer = styled.div``;\n\nconst ReadMore = styled.div`\n  height: 30px;\n  float: right;\n  color: ${color.blue};\n`;\n\ninterface Props {\n  post: PostModel;\n}\n\nconst PostItem = ({ post }: Props) => {\n  const { title, path, date, subtitle } = post;\n  const [over, setOver] = useState(false);\n\n  return (\n    <Container\n      onMouseEnter={() => {\n        setOver(true);\n      }}\n      onMouseLeave={() => {\n        setOver(false);\n      }}\n    >\n      <Link to={path}>\n        <BorderBox color={over ? color.blue : color.white}>\n          <ContentBox>\n            <Title>{title}</Title>\n            <SubtitleBox>\n              {subtitle && <Subtitle>{subtitle}</Subtitle>}\n            </SubtitleBox>\n            <MetaContainer>\n              <DateText>{date}</DateText>\n              <ReadMore>{over && <span>Read More</span>}</ReadMore>\n            </MetaContainer>\n          </ContentBox>\n        </BorderBox>\n      </Link>\n    </Container>\n  );\n};\n\nexport default PostItem;\n","import React from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { graphql } from \"gatsby\";\nimport PostModel from \"../model/PostModel\";\nimport PostItem from \"../components/postItem\";\n\nconst Post = ({ data }) => {\n  const {\n    allMarkdownRemark: { edges },\n  } = data;\n\n  const posts: Array<any> = edges.map(({ node }) => {\n    return new PostModel(node);\n  });\n\n  return (\n    <Layout>\n      <SEO title=\"post\" />\n      {posts.map((post) => {\n        return <PostItem post={post} />;\n      })}\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark {\n      edges {\n        node {\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            path\n            title\n            subtitle\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Post;\n"],"names":["white","black","gray75","gray","blue","burgundy","navy","green","PostModel","node","frontmatter","Object","assign","this","GatsbyLink","styled","Link","color","to","props","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","Container","BorderBox","css","ContentBox","Title","SubtitleBox","Subtitle","DateText","MetaContainer","ReadMore","post","title","path","date","subtitle","useState","over","setOver","onMouseEnter","onMouseLeave","posts","data","allMarkdownRemark","edges","map"],"sourceRoot":""}